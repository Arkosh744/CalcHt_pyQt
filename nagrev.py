# Определим данные


# B = 0.05  # толщина пластины(тепл.слоя),м
TP = 26  # теплопроводность при нач темп. Вт/(м*К)
TE = 650  # уд. теплоемкость при нач темп. Дж/(кг*К)
P = 7800  # плотность при нач темп. кг/м3
TM = 500  # уд. теплоемкость второго слоя
PM = 7000  # плотность второго слоя
# K = 8  # число узлов сетки(слоев?),шт
# a1 = 150  # коэф. теплоотдачи сверху
a2 = 30  # коэф. теплоотдачи снизу
TOB = 2000  # температура среды со стороны покрытия,C
TOH = 500  # температура среды со стороны металла,C
MKM = 0  # счетчик итераций

DX = 0.1  # шаг по времени,с
# XK = 10  # конечное время,с

# TN = 25  # температура стенки в нач. момент,К

# Инциация массивов
T = []  # температуры
E = []  # вспомогательный 1
F = []  # вспомогательный 2


def start_variables(B, TN, K, XK, a1):
    global T, E, F, S, H, U, G, H2, HG, A1, A2, B2, C2, CR, X
    T = [TN for i in range(K)]
    E = [0 for i in range(K)]
    F = [0 for i in range(K)]
    # Определяем свойства
    S = B / (K - 1);  # толщина ячейки,м
    H = DX / (TE * P * S);
    U = TP / S;
    G = 1
    H2 = 2 * H
    HG = H2 / G
    A1 = U * H2
    A2 = U * H
    B2 = 1 + U * H2
    C2 = U * H
    CR = HG * U
    X = 0

# Циклы в функциях


def calculate_T(XK, K, a1):
    global X, L, N, MKM, T
    while True:
        if (X - XK + DX - 0.000001) <= 0:
            X = X + DX
            B1 = 1 + H2 * (a1 + U)
            BR = 1 + HG * (a2 + U)
            D1 = T[0] + H2 * a1 * TOB
            DR = T[K - 1] + HG * a2 * TOH
            E[0] = A1 / B1
            F[0] = D1 / B1
            N = K - 1
        else:
            return T
        for i in range(1, N):
            E[i] = A2 / (B2 - C2 * E[i - 1])
            F[i] = (T[i] + C2 * F[i - 1]) / (B2 - C2 * E[i - 1])
        T[K - 1] = (DR + CR * F[K - 2]) / (BR - CR * E[K - 2])
        L = K - 1
        while True:
            if L - 1 >= 0:
                T[L - 1] = E[L - 1] * T[L] + F[L - 1]
                L = L - 1
                continue
            else:
                MKM += 1
                break

